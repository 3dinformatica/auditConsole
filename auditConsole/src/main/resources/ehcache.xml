<!--  
    INFO DETTAGLIATE DI CONFIGURAZIONE: http://www.ehcache.org/ehcache.xml
-->
<ehcache xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="ehcache.xsd" updateCheck="true"
	monitoring="autodetect" dynamicConfig="true">

	<!--
    DiskStore has only one attribute - "path". It is the path to the directory where
    any required disk files will be created.
    
	If the path is one of the following Java System Property it is replaced by its value in the
    running VM. For backward compatibility these should be specified without being enclosed in the ${token}
    replacement syntax.

    The following properties are translated:
    * user.home - User's home directory
    * user.dir - User's current working directory
    * java.io.tmpdir - Default temp file path
    * ehcache.disk.store.dir - A system property you would normally specify on the command line
      e.g. java -Dehcache.disk.store.dir=/u01/myapp/diskdir ...

    Subdirectories can be specified below the property e.g. java.io.tmpdir/one
	 -->
	<diskStore path="java.io.tmpdir/auditConsole" />

	<!--
    name:
    Sets the name of the cache. This is used to identify the cache. It must be unique.
    
    maxEntriesLocalHeap:
    Sets the maximum number of objects that will be created in memory. 0 = no limit
    
    maxEntriesLocalDisk:
    Sets the maximum number of objects that will be maintained in the DiskStore. The default value is zero, meaning unlimited.
    
    eternal:
    Sets whether elements are eternal. If eternal, timeouts are ignored and the element is never expired.
    
    diskSpoolBufferSizeMB:
    This is the size to allocate the DiskStore for a spool buffer. Writes are made to this area and then asynchronously written to disk. The default size is 30MB.
    Each spool buffer is used only by its cache. If you get OutOfMemory errors consider lowering this value. To improve DiskStore performance consider 
    increasing it. Trace level logging in the DiskStore will show if put back ups are occurring.
    
    timeToIdleSeconds:
    Sets the time to idle for an element before it expires. i.e. The maximum amount of time between accesses before an element expires
    Is only used if the element is not eternal. Optional attribute. A value of 0 means that an Element can idle for infinity. The default value is 0.
    
    timeToLiveSeconds:
    Sets the time to live for an element before it expires. i.e. The maximum time between creation time and when an element expires.
    Is only used if the element is not eternal. Optional attribute. A value of 0 means that and Element can live for infinity. The default value is 0.
    
    memoryStoreEvictionPolicy:
    Policy would be enforced upon reaching the maxEntriesLocalHeap limit. Default policy is Least Recently Used (specified as LRU). Other policies 
    available - First In First Out (specified as FIFO) and Less Frequently Used (specified as LFU)
     -->
	<cache 
		name="progressBar" 
		maxEntriesLocalHeap="0"
		maxEntriesLocalDisk="1000" 
		eternal="false" 
		diskSpoolBufferSizeMB="30"
		timeToIdleSeconds="900" 
		timeToLiveSeconds="0"
		memoryStoreEvictionPolicy="LFU" 
		transactionalMode="off">
		
		<!--
		strategy:
		Configures the type of persistence provided by the configured cache.  This must be one of the following values:
		
		* localRestartable - Enables the RestartStore and copies all cache entries (on-heap and/or off-heap) to disk. 
		This option provides fast restartability with fault tolerant cache persistence on disk. It is available for Enterprise Ehcache users only.
		
		* localTempSwap - Swaps cache entries (on-heap and/or off-heap) to disk when the cache is full. "localTempSwap" is not persistent.
		
		* none - Does not persist cache entries.
		
		* distributed - Defers to the <terracotta> configuration for persistence settings. This option is not applicable for standalone.
		 -->
		<persistence strategy="localTempSwap" />
	</cache>

</ehcache>